From bff414dcb3434b80720cbb45c564d18a337b557d Mon Sep 17 00:00:00 2001
From: Marcel Apfelbaum <marcel@redhat.com>
Date: Thu, 1 Sep 2016 11:57:27 +0200
Subject: [PATCH 30/30] Revert "acpi: pc: add fw_cfg device node to dsdt"

RH-Author: Marcel Apfelbaum <marcel@redhat.com>
Message-id: <1472731047-11628-1-git-send-email-marcel@redhat.com>
Patchwork-id: 72128
O-Subject: [RHEL-7.3 qemu-kvm-rhev PATCH] Revert "acpi: pc: add fw_cfg device node to dsdt"
Bugzilla: 1368153
RH-Acked-by: Laszlo Ersek <lersek@redhat.com>
RH-Acked-by: Michael S. Tsirkin <mst@redhat.com>
RH-Acked-by: vrozenfe <vrozenfe@redhat.com>

Upstream: Downstream only
Tests:    Tested with Linux Guest kernel 4.6 and see the fw_cfg sysfs is missing.
          QE tested it as part of BZ: 1246993

The new fw_cfg ACPI device prevents virtio-win to pass ws2016 svvp tests.
The sysfs exposed by it has no Windows drivers and probably never will and
in the same time is not really useful for Linux Guests.

Disable it for 7.3 and look for a solution for 7.4 .

This reverts commit e2ec75685c202c7537ed2064293a8e3e28a6d71a.

Signed-off-by: Marcel Apfelbaum <marcel@redhat.com>
Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>
---
 hw/i386/acpi-build.c | 30 ------------------------------
 1 file changed, 30 deletions(-)

diff --git a/hw/i386/acpi-build.c b/hw/i386/acpi-build.c
index ac33e3c..33a1b63 100644
--- a/hw/i386/acpi-build.c
+++ b/hw/i386/acpi-build.c
@@ -1941,7 +1941,6 @@ build_dsdt(GArray *table_data, BIOSLinker *linker,
     CrsRangeEntry *entry;
     Aml *dsdt, *sb_scope, *scope, *dev, *method, *field, *pkg, *crs;
     CrsRangeSet crs_range_set;
-    PCMachineState *pcms = PC_MACHINE(machine);
     PCMachineClass *pcmc = PC_MACHINE_GET_CLASS(machine);
     uint32_t nr_mem = machine->ram_slots;
     int root_bus_limit = 0xFF;
@@ -2185,35 +2184,6 @@ build_dsdt(GArray *table_data, BIOSLinker *linker,
     aml_append(scope, aml_name_decl("_S5", pkg));
     aml_append(dsdt, scope);
 
-    /* create fw_cfg node, unconditionally */
-    {
-        /* when using port i/o, the 8-bit data register *always* overlaps
-         * with half of the 16-bit control register. Hence, the total size
-         * of the i/o region used is FW_CFG_CTL_SIZE; when using DMA, the
-         * DMA control register is located at FW_CFG_DMA_IO_BASE + 4 */
-        uint8_t io_size = object_property_get_bool(OBJECT(pcms->fw_cfg),
-                                                   "dma_enabled", NULL) ?
-                          ROUND_UP(FW_CFG_CTL_SIZE, 4) + sizeof(dma_addr_t) :
-                          FW_CFG_CTL_SIZE;
-
-        scope = aml_scope("\\_SB.PCI0");
-        dev = aml_device("FWCF");
-
-        aml_append(dev, aml_name_decl("_HID", aml_string("QEMU0002")));
-
-        /* device present, functioning, decoding, not shown in UI */
-        aml_append(dev, aml_name_decl("_STA", aml_int(0xB)));
-
-        crs = aml_resource_template();
-        aml_append(crs,
-            aml_io(AML_DECODE16, FW_CFG_IO_BASE, FW_CFG_IO_BASE, 0x01, io_size)
-        );
-        aml_append(dev, aml_name_decl("_CRS", crs));
-
-        aml_append(scope, dev);
-        aml_append(dsdt, scope);
-    }
-
     if (misc->applesmc_io_base) {
         scope = aml_scope("\\_SB.PCI0.ISA");
         dev = aml_device("SMC");
-- 
1.8.3.1

